{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/add-comment/add-comment.component.ts","./src/app/components/add-comment/add-comment.component.html","./src/app/components/comment/comment.component.html","./src/app/components/comment/comment.component.ts","./src/app/components/edit-comment/edit-comment.component.ts","./src/app/components/edit-comment/edit-comment.component.html","./src/app/model/comment.ts","./src/app/services/comment.service.ts","./src/app/services/post.service.ts","./src/app/views/create-post/create-post.component.ts","./src/app/views/create-post/create-post.component.html","./src/app/views/forget-pwd/forget-pwd.component.ts","./src/app/views/forget-pwd/forget-pwd.component.html","./src/app/views/home/home.component.html","./src/app/views/home/home.component.ts","./src/app/views/login/login.component.ts","./src/app/views/login/login.component.html","./src/app/views/post-details/post-details.component.html","./src/app/views/post-details/post-details.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { HomeComponent } from \"./views/home/home.component\";\nimport { PostDetailsComponent } from \"./views/post-details/post-details.component\";\nimport { EditCommentComponent } from \"./components/edit-comment/edit-comment.component\";\nimport { CreatePostComponent } from \"./views/create-post/create-post.component\";\nimport { LoginComponent } from \"./views/login/login.component\";\nimport { ForgetPwdComponent } from \"./views/forget-pwd/forget-pwd.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"login\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"login\",\n    component: LoginComponent,\n  },\n  {\n    path: \"forgot-password\",\n    component: ForgetPwdComponent,\n  },\n  {\n    path: \"home\",\n    component: HomeComponent,\n  },\n  {\n    path: \"post/create\",\n    component: CreatePostComponent,\n  },\n  {\n    path: \"post/details/:id\",\n    component: PostDetailsComponent,\n  },\n  {\n    path: \"comments/:id/edit\",\n    component: EditCommentComponent,\n  },\n  {\n    path: \"**\",\n    component: LoginComponent,\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      relativeLinkResolution: \"legacy\",\n      useHash: true,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","<div class=\"jumbotron jumbotron-fluid\">\n  <div class=\"container\">\n    <p class=\"text-right logout\" (click) =\"logout()\" > <b *ngIf=\"user\"> {{user}} |  Logout</b> </p>\n    <h1 class=\"display-10\">Angular BLOG</h1>\n    <p class=\"lead\">Local JSON DB ~ Blog made with Angular 12</p>\n  </div>\n</div>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  user: any;\n\n  constructor(private router: Router) { \n    this.user = JSON.parse(localStorage.getItem('user'))\n    console.log('this.user', this.user)\n  }\n\n  logout() {\n    localStorage.clear();\n    this.router.navigateByUrl('login');\n    location.reload()\n  }\n\n  ngOnInit() {\n    this.user = JSON.parse(localStorage.getItem('user'))\n    console.log('this.user', this.user)\n    if(!this.user) {\n      this.router.navigateByUrl('login');\n    }\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n// Routing\nimport { AppRoutingModule } from './app-routing.module';\n\n// Components\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './views/home/home.component';\nimport { PostDetailsComponent } from './views/post-details/post-details.component';\nimport { CommentComponent } from './components/comment/comment.component';\nimport { AddCommentComponent } from './components/add-comment/add-comment.component';\n// Bootstrap module components\nimport { NgbModalModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n// Services\nimport { PostService } from './services/post.service';\nimport { CommentService } from './services/comment.service';\nimport { EditCommentComponent } from './components/edit-comment/edit-comment.component';\nimport { CreatePostComponent } from './views/create-post/create-post.component';\nimport { LoginComponent } from './views/login/login.component';\nimport { ForgetPwdComponent } from './views/forget-pwd/forget-pwd.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    PostDetailsComponent,\n    CommentComponent,\n    AddCommentComponent,\n    EditCommentComponent,\n    CreatePostComponent,\n    LoginComponent,\n    ForgetPwdComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgbModalModule, NgbModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    PostService, CommentService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, Input, OnInit} from '@angular/core';\nimport { FormControl, FormGroup, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { CommentService } from '../../services/comment.service';\nimport { Post } from '../../model/post';\nimport { Comment } from '../../model/comment';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n\n@Component({\n  selector: 'app-add-comment',\n  templateUrl: './add-comment.component.html',\n  styleUrls: ['./add-comment.component.scss']\n})\nexport class AddCommentComponent implements OnInit {\n\n  @Input() post: Post;\n  comment: Comment;\n  commentForm: FormGroup;\n  user:any;\n\n  constructor(private api: CommentService, private router: Router, private modalService: NgbModal) {\n    this.comment = new Comment();\n    this.user = JSON.parse(localStorage.getItem('user'))\n  }\n\n  ngOnInit() {\n    this.commentForm = new FormGroup({\n      content: new FormControl('', [Validators.required]),\n      user: new FormControl(this.user, [Validators.required])\n    });\n  }\n\n  addComment() {\n    this.comment = this.commentForm.value;\n    this.comment.date = this.formatCurrentDate();\n    this.api.addCommentByPostId(this.comment, this.post.id)\n      .subscribe(() => {\n        this.modalService.dismissAll();\n        this.refresh();\n        this.router.navigate(['post/details/', this.post.id]);\n      }, error => console.log(error));\n  }\n\n  private refresh() {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    this.router.onSameUrlNavigation = 'reload';\n  }\n\n  private formatCurrentDate(): string {\n    const current: Date = new Date();\n    let strMonth = (current.getMonth() + 1).toString();\n    let strDay = current.getDate().toString();\n    if (current.getMonth() + 1 < 10) {\n      strMonth = '0' + strMonth;\n    }\n    if (current.getDate() < 10) {\n      strDay = '0' + strDay;\n    }\n    return current.getFullYear() + '-' + strMonth + '-' + strDay;\n  }\n\n  closeModal() {\n    this.modalService.dismissAll();\n }\n\n}\n","<div class=\"modal-header\">\n  <h5 class=\"modal-title\" id=\"commentModalLabel\">New comment</h5>\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" >\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <form [formGroup]=\"commentForm\">\n    <div class=\"form-group\">\n      <div *ngIf=\"!commentForm.controls['user'].valid && commentForm.controls['user'].touched\" class=\"alert alert-danger\">This field is required.</div>\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\">Author:</span>\n        </div>\n        <input type=\"text\" class=\"form-control\" [readonly]=\"true\" placeholder=\"Write author's name...\" aria-label=\"author\" formControlName=\"user\">\n      </div>\n      <div *ngIf=\"!commentForm.controls['content'].valid && commentForm.controls['content'].touched\" class=\"alert alert-danger\">This field is required.</div>\n      <textarea class=\"form-control\" type=\"text\" id=\"commentContent\" placeholder=\"Write here...\" formControlName=\"content\"></textarea>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!commentForm.valid\" (click)=\"addComment()\">Add</button>\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal()\"  >Cancel</button>\n    </div>\n  </form>\n</div>\n","<ng-template #commentEditModal let-modal>\n  <app-edit-comment></app-edit-comment>\n</ng-template>\n<li class=\"list-group-item media d-flex justify-content-md-between align-items-md-center\">\n  <div class=\"media-body\">\n    <h5 class=\"mt-0 mb-1\">{{ comment.user | titlecase  }} | <small class=\"text-muted\">{{ comment.date }}</small></h5>\n    <p>{{ comment.content }}</p>\n  </div>\n  <div class=\"btn-group\" role=\"group\" aria-label=\"Comment buttons\">\n    <button type=\"button\" class=\"btn btn-secondary\" id=\"editBtn\" (click)=\"editComment()\">Edit</button>\n    <button type=\"button\" class=\"btn btn-danger\" id=\"deleteBtn\" (click)=\"deleteComment()\">Delete</button>\n  </div>\n</li>\n","import {Component, Input} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommentService } from '../../services/comment.service';\nimport { Comment } from '../../model/comment';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.scss']\n})\nexport class CommentComponent {\n\n  @Input() comment: Comment = {\n    id: 0,\n    postId: 0,\n    parent_id: null,\n    user: '',\n    date: null,\n    content: ''\n  };\n\n  constructor(private api: CommentService, private router: Router) { }\n\n  deleteComment() {\n    this.api.deleteCommentById(this.comment.id)\n      .subscribe(() => {\n        this.refresh();\n        this.router.navigate([this.router.url]);\n      });\n  }\n\n  editComment() {\n    this.router.navigate([`/comments/${this.comment.id}/edit`]);\n  }\n\n  private refresh() {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    this.router.onSameUrlNavigation = 'reload';\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport { CommentService } from '../../services/comment.service';\n\nimport { Comment } from '../../model/comment';\n\n@Component({\n  selector: 'app-edit-comment',\n  templateUrl: './edit-comment.component.html',\n  styleUrls: ['./edit-comment.component.scss']\n})\nexport class EditCommentComponent implements OnInit {\n\n  comment: Comment;\n  commentForm: FormGroup;\n  isLoading = true;\n  isSuccess = false;\n\n  constructor(private api: CommentService, private route: ActivatedRoute, private location: Location) {\n    this.comment = new Comment();\n  }\n\n  ngOnInit() {\n    this.commentForm = new FormGroup({\n      id: new FormControl(''),\n      postId: new FormControl(''),\n      content: new FormControl('', [Validators.required])\n    });\n    this.getCommentById(this.route.snapshot.params.id);\n  }\n\n  getCommentById(id: any) {\n    this.api.getCommentById(id)\n      .subscribe((res) => {\n        this.commentForm.setValue({\n          id: res.id,\n          postId: res.postId,\n          content: res.content\n        });\n        this.comment = res;\n        this.isLoading = false;\n      }, error => {\n        this.isLoading = false;\n        console.log(error);\n      });\n  }\n\n  save() {\n    this.isLoading = true;\n    const commentId = this.route.snapshot.params.id;\n    this.comment.content = this.commentForm.value.content;\n    this.api.updateComment(commentId, this.comment)\n      .subscribe((res) => {\n        this.isSuccess = true;\n        setTimeout(() => { this.isSuccess = false; }, 3000);\n        this.isLoading = false;\n      }, error => {\n        console.log(error);\n        this.isLoading = false;\n      });\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n}\n","<div class=\"container\">\n  <div *ngIf=\"isLoading\" class=\"alert alert-warning\">\n    Loading data, please wait...\n  </div>\n    <div class=\"card\">\n      <div class=\"card-header\">{{ comment.user | titlecase  }} | <span class=\"text-muted\">{{ comment.date }}</span></div>\n      <div class=\"card-body\">\n        <form [formGroup]=\"commentForm\">\n          <label for=\"commentContent\">Content:</label>\n          <textarea type=\"text\" id=\"commentContent\" formControlName=\"content\" class=\"form-control\" placeholder=\"Write here...\">\n            {{ commentForm.value.content }}\n          </textarea>\n          <div class=\"btn-toolbar justify-content-end mt-2\">\n            <div class=\"btn-group\" aria-label=\"Main buttons\">\n              <button class=\"btn btn-secondary mr-2\" (click)=\"goBack()\">Back</button>\n              <button class=\"btn btn-primary\" [disabled]=\"!commentForm.valid\" (click)=\"save()\">Save</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n    <div *ngIf=\"isSuccess\" class=\"alert alert-success fade show\" role=\"alert\">\n      <h4>Changes saved successfully!!</h4>\n    </div>\n</div>\n","export class Comment {\n  id: number;\n  postId: number;\n  parent_id: null;\n  user: string;\n  date: string;\n  content: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { Comment } from '../model/comment';\n\nconst apiURL = 'http://localhost:3001';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentService {\n\n  constructor(private http: HttpClient) { }\n\n  addCommentByPostId(comment: Comment, id: any): Observable<Comment> {\n    return this.http.post<Comment>(`${apiURL}/posts/${id}/comments`, comment).pipe(\n      tap((prod: Comment) => this.log(`added comment w/ id=${prod.id} to post w/ id=${id}`)),\n      catchError(this.handleError<Comment>('addComment'))\n    );\n  }\n\n  getCommentsByPostId(postId: any): Observable<Comment[]> {\n    const url = `${apiURL}/posts/${postId}/comments`;\n    return this.http.get<Comment[]>(url).pipe(\n        tap(() => this.log(`fetched comments by postId=${postId}`)),\n        catchError(this.handleError<Comment[]>('getCommentsByPostId', []))\n      );\n  }\n\n  deleteCommentById(id: any): Observable<Comment> {\n    const url = `${apiURL}/comments/${id}`;\n    return this.http.delete<Comment>(url).pipe(\n      tap(_ => this.log(`deleted comment id=${id}`)),\n      catchError(this.handleError<Comment>('deleteComment'))\n    );\n  }\n\n  updateComment(id: any, comment: Comment): Observable<Comment> {\n    const url = `${apiURL}/comments/${id}`;\n    return this.http.put<Comment>(url, comment).pipe(\n      tap(_ => this.log(`updated comment id=${id}`)),\n      catchError(this.handleError<Comment>('updateComment'))\n    );\n  }\n\n  getCommentById(id: any): Observable<Comment> {\n    const url = `${apiURL}/comments/${id}`;\n    return this.http.get<Comment>(url).pipe(\n      tap(() => this.log(`fetched comment by id=${id}`)),\n      catchError(this.handleError<Comment>('getCommentById'))\n    );\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      console.error(error); // log to console instead\n      this.log(`${operation} failed: ${error.message}`);\n\n      return of(result as T);\n    };\n  }\n\n  private log(message: string) {\n    console.log(message);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { Post } from '../model/post';\n\nconst apiURL = 'http://localhost:3001/posts/';\n// const apiURL = './../assets/api/db.json';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  constructor(private http: HttpClient) { }\n\n  addPost(payload: any): Observable<Post> {\n    const url = `${apiURL}`;\n    return this.http.post<any>(url, payload).pipe(\n      tap(_ => this.log(`fetched post by payload=${payload}`)),\n      catchError(this.handleError<Post>(`getPost id=${payload}`))\n    );\n  }\n\n  getPosts(): Observable<Post[]> {\n    return this.http.get<Post[]>(apiURL).pipe(\n        tap(() => this.log('Posts fetched')),\n        catchError(this.handleError('getPosts', []))\n      );\n  }\n\n  getPost(id: any): Observable<Post> {\n    const url = `${apiURL}${id}`;\n    return this.http.get<Post>(url).pipe(\n      tap(_ => this.log(`fetched post by id=${id}`)),\n      catchError(this.handleError<Post>(`getPost id=${id}`))\n    );\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      console.error(error); // log to console instead\n      this.log(`${operation} failed: ${error.message}`);\n\n      return of(result as T);\n    };\n  }\n\n  private log(message: string) {\n    console.log(message);\n  }\n\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { PostService } from \"src/app/services/post.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-create-post\",\n  templateUrl: \"./create-post.component.html\",\n  styleUrls: [\"./create-post.component.scss\"],\n})\nexport class CreatePostComponent implements OnInit {\n  blogForm: FormGroup;\n  author: any;\n  constructor(\n    private fb: FormBuilder,\n    private readonly api: PostService,\n    private readonly router: Router\n  ) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {}\n\n  initForm() {\n    this.author = JSON.parse(localStorage.getItem(\"user\"));\n    this.blogForm = this.fb.group({\n      id: [new Date().valueOf()],\n      author: [this.author],\n      heading: [\"\", Validators.required],\n      subHeading: [\"\", Validators.required],\n      section1: [\"\"],\n      section2: [\"\"],\n      section3: [\"\"],\n      sectionHeading: [\"\"],\n      createdAt: [new Date()],\n    });\n  }\n\n  submit() {\n    console.log(\"formGroup\", this.blogForm.value);\n    this.api.addPost(this.blogForm.value).subscribe((res) => {\n      console.log(\"res\", res);\n      alert(\"Blog created!\");\n      this.router.navigateByUrl(\"/home\");\n    });\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-8\">\n      <div class=\"leftcolumn\">\n        <div class=\"fakeimg\">\n          <!-- <img src=\"https://via.placeholder.com/660x340\" alt=\"\" /> -->\n          We can add cover image here\n        </div>\n        <form [formGroup]=\"blogForm\" (ngSubmit)=\"submit()\">\n          <div class=\"card\">\n            <label for=\"exampleFormControlTextarea1\">Heading <span style=\"color: red;\" > * </span> </label>\n            <input\n              class=\"form-control form-control-lg\"\n              type=\"text\"\n              placeholder=\"Heading\"\n              formControlName=\"heading\"\n            />\n            <br />\n            <label for=\"exampleFormControlTextarea1\">Sub Heading <span style=\"color: red;\" > * </span></label>\n            <input\n              class=\"form-control form-control-lg\"\n              type=\"text\"\n              placeholder=\"Sub - Heading\"\n              formControlName=\"subHeading\"\n            />\n            <br />\n            <div class=\"form-group\">\n              <label for=\"exampleFormControlTextarea1\">Section 1</label>\n              <textarea\n                class=\"form-control\"\n                id=\"exampleFormControlTextarea1\"\n                placeholder=\"Enter your text here\"\n                rows=\"3\"\n                formControlName=\"section1\"\n              ></textarea>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"exampleFormControlTextarea1\">Section 2</label>\n              <textarea\n                class=\"form-control\"\n                id=\"exampleFormControlTextarea1\"\n                placeholder=\"Enter your text here\"\n                rows=\"3\"\n                formControlName=\"section2\"\n              ></textarea>\n            </div>\n          </div>\n          <div class=\"card\">\n            <label for=\"exampleFormControlTextarea1\">Section Heading</label>\n            <input\n              class=\"form-control form-control-lg\"\n              type=\"text\"\n              placeholder=\"Section - Heading\"\n              formControlName=\"sectionHeading\"\n            />\n            <br />\n\n            <div class=\"form-group\">\n              <label for=\"exampleFormControlTextarea1\">Section 3</label>\n              <textarea\n                class=\"form-control\"\n                id=\"exampleFormControlTextarea1\"\n                placeholder=\"Enter your text here\"\n                rows=\"3\"\n                formControlName=\"section3\"\n              ></textarea>\n            </div>\n\n            <br>\n            <label for=\"exampleFormControlTextarea1\"><span style=\"color: red;\" > * </span> Mark fields are required</label>\n            \n            <div class=\"btn-group pt-4\" aria-label=\"Main buttons\">\n              <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!blogForm.valid\" >Submit Blog</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n\n    <div class=\"footer\" style=\"background-color: transparent\">\n      <!-- <h2>Footer</h2> -->\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-forget-pwd',\n  templateUrl: './forget-pwd.component.html',\n  styleUrls: ['./forget-pwd.component.scss']\n})\nexport class ForgetPwdComponent implements OnInit {\n\n  resetForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.resetForm = this.fb.group({\n      email: ['', Validators.required]\n    })\n  }\n\n  submit() {\n    console.log('####', this.resetForm.value);\n    // call here REST api to send reset pwd link email\n  }\n}\n","<div class=\"container login-container\">\n    <div class=\"row\">\n        <div class=\"col-md-3\"></div>\n      <div class=\"col-md-6 login-form-1\">\n        <h3 class=\"py-4\">Reset Password </h3>\n        <form [formGroup]=\"resetForm\" >\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"Your Email *\"\n              value=\"\"\n              formControlName=\"email\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"submit()\" [disabled]=\"!resetForm.valid\" >Send Reset Link</button>\n  \n          </div>\n          <div class=\"form-group\">\n            <a routerLink = '/login' class=\"ForgetPwd\"> Login </a>\n          </div>\n        </form>\n      </div> \n      <div class=\"col-md-3\"></div>\n  \n    </div>\n  </div>\n  ","<div *ngIf=\"isLoading\" class=\"alert alert-warning\">\n  Loading data, please wait...\n</div>\n\n<div class=\"container\">\n  <div class=\"row mb-5\">\n    <div class=\"col-md-12\">\n      <div class=\"btn-toolbar mt-2 text-right\">\n        <div class=\"btn-group\" aria-label=\"Main buttons\">\n          <button class=\"btn btn-primary\" (click)=\"createBlog()\">\n            Create Blog\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div\n      class=\"col-12 col-sm-8 col-md-6 col-lg-4 pb-4\"\n      *ngFor=\"let post of posts\"\n      [routerLink]=\"['/post/details/', post.id]\"\n    >\n      <div class=\"card\">\n        <img src=\"https://via.placeholder.com/660x340\" alt=\"\" />\n        <div class=\"card-img-overlay\">\n          <a class=\"btn btn-light btn-sm\">Technology</a>\n        </div>\n        <div class=\"card-body\">\n          <h4 class=\"card-title\">{{ post.heading }}</h4>\n          <small class=\"text-muted cat\">\n            <i class=\"far fa-clock text-info\"></i> 5 minutes\n          </small>\n          <p class=\"card-text\">\n            {{ post.subHeading }}\n          </p>\n          <a href=\"#\" class=\"btn btn-info\">Read more</a>\n        </div>\n        <div\n          class=\"\n            card-footer\n            text-muted\n            d-flex\n            justify-content-between\n            bg-transparent\n            border-top-0\n          \"\n        >\n          <div class=\"views\">\n            <b> {{ post.author | titlecase  }} </b>\n            <span class=\"text-muted\"></span>\n          </div>\n          <div class=\"stats\">\n            {{ post.createdAt | date: \"dd/MM/yyyy\" }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PostService } from '../../services/post.service';\nimport { Post } from '../../model/post';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n\nexport class HomeComponent implements OnInit {\n\n  posts: Post[] = [];\n  isLoading = true;\n\n  constructor(\n    private readonly router: Router,\n    private readonly api: PostService) { }\n\n  ngOnInit() {\n    this.api.getPosts()\n      .subscribe((res: any) => {\n        this.posts = this.sortPostsByDate(res);\n        this.isLoading = false;\n      }, err => {\n        console.log(err);\n        this.isLoading = false;\n      });\n  }\n\n  private sortPostsByDate(posts: Post[]): Post[] {\n    return posts.sort((post1, post2) => {\n      return new Date(post2.createdAt).getTime() - new Date(post1.createdAt).getTime();\n    });\n  }\n\n  createBlog() {\n    this.router.navigateByUrl('/post/create')\n   \n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup ;\n  \n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly router: Router\n  ) { }\n  \n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n  }\n  \n  submit() {\n    console.log('loginForm', this.loginForm.value)\n    this.router.navigateByUrl('home')\n    localStorage.setItem('user', JSON.stringify(this.loginForm.value.username) )\n  }\n\n  forgetPwd(){\n    this.router.navigateByUrl('forgot-password');\n  }\n}\n","<div class=\"container login-container\">\n  <div class=\"row\">\n      <div class=\"col-md-3\"></div>\n    <div class=\"col-md-6 login-form-1\">\n      <h3>Login </h3>\n      <form [formGroup]=\"loginForm\" >\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"Your Email *\"\n            value=\"\"\n            formControlName=\"username\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            placeholder=\"Your Password *\"\n            value=\"\"\n            formControlName=\"password\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <button type=\"submit\" class=\"btn btn-primary\" (click)=\"submit()\" [disabled]=\"!loginForm.valid\" >Login</button>\n\n        </div>\n        <div class=\"form-group\">\n          <a (click)=\"forgetPwd()\" class=\"ForgetPwd\">Forget Password?</a>\n        </div>\n      </form>\n    </div> \n    <div class=\"col-md-3\"></div>\n\n  </div>\n</div>\n","<ng-template #commentAddModal let-modal>\n  <app-add-comment [post]=\"post\"></app-add-comment>\n</ng-template>\n<div class=\"container\">\n  <div *ngIf=\"isLoading\" class=\"alert alert-warning\">\n    Loading data, please wait...\n  </div>\n  <div class=\"card\">\n    <img src=\"https://via.placeholder.com/360x140\" alt=\"\" />\n    <div class=\"card-header\"> Author - {{ post?.author | titlecase  }} | <span class=\"text-muted\">{{ post?.createdAt | date: 'dd/MM/yyyy' }}</span></div>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">{{ post?.heading }}</h5>\n      <h6 class=\"card-title\">{{ post?.subHeading }}</h6>\n      <p class=\"card-text\" [innerHTML]=\"post.section1\"></p>\n      <p class=\"card-text\" [innerHTML]=\"post.section2\"></p>\n      <h6 class=\"card-title\">{{ post?.sectionHeading }}</h6>\n      <p class=\"card-text\" [innerHTML]=\"post.section3\"></p>\n    </div>\n    <div class=\"card-footer\">\n      <h6>Comments</h6>\n      <ul class=\"list-group\" *ngIf=\"(comments.length > 0) else noComments\">\n        <app-comment *ngFor=\"let comment of comments\" [comment]=\"comment\"></app-comment>\n      </ul>\n      <ng-template #noComments>There are no comments.</ng-template>\n      <div class=\"btn-toolbar mt-2 text-right\">\n        <div class=\"btn-group\" aria-label=\"Main buttons\">\n          <button class=\"btn btn-secondary\"  [routerLink]=\"'/home'\"> Back </button> &nbsp;\n          <button class=\"btn btn-primary\" (click)=\"openModal(commentAddModal)\"> Add Comment </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { PostService } from '../../services/post.service';\nimport { CommentService } from '../../services/comment.service';\n\nimport { Post } from '../../model/post';\nimport { Comment } from '../../model/comment';\n\n@Component({\n  selector: 'app-post-details',\n  templateUrl: './post-details.component.html',\n  styleUrls: ['./post-details.component.scss']\n})\nexport class PostDetailsComponent implements OnInit {\n\n  post: any = {\n    id: '',\n    heading: '',\n    subHeading: '',\n    section1: '',\n    section2: '',\n    section3: '',\n    sectionHeading: '',\n    createdAt: null\n  };\n  comments: Comment[] = [];\n  isLoading = true;\n\n  constructor(private route: ActivatedRoute, private apiPost: PostService,\n              private apiComment: CommentService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.getPostDetails(this.route.snapshot.params.id);\n  }\n\n  getPostDetails(id: any) {\n    this.apiPost.getPost(id)\n      .subscribe((data: any) => {\n        this.post = data;\n        console.log('this.post', this.post)\n        this.getCommentsByPostId();\n        this.isLoading = false;\n      });\n  }\n\n  getCommentsByPostId() {\n    this.apiComment.getCommentsByPostId(this.post.id)\n      .subscribe((res: any) => {\n        this.comments = res;\n      }, err => {\n        console.log(err);\n      });\n  }\n\n  openModal(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' });\n  }\n\n  closeModal() {\n     this.modalService.dismissAll();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}